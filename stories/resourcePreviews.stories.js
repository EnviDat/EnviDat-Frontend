/* eslint-disable no-tabs */
/* eslint-disable no-use-before-define */
/**
 * @summary story of BaseIconLabelView for sandbox testing
 * @author Dominik Haas-Artho
 *
 * Created at     : 2019-10-23 16:34:51
 * Last modified  : 2020-10-27 16:00:17
 *
 * This file is subject to the terms and conditions defined in
 * file 'LICENSE.txt', which is part of this source code package.
 */

/* eslint-disable import/no-extraneous-dependencies */
import { storiesOf } from '@storybook/vue';

import TextPreviewCard from '@/modules/metadata/components/ResourcePreviews/TextPreviewCard';

// const readme1 = './testdata/bender2020_readme.txt';
// const readme2 = './testdata/10-16904-envidat-30_readme.txt';


storiesOf('3 Cards / Resource Previews', module)
.add('Text Preview', () => ({
  components: { TextPreviewCard },
  template: `
  <v-col>

    <v-row>
      <v-col>
        Empty Text Preview
      </v-col>
    </v-row>

    <v-row>
      <v-col>
        <TextPreviewCard />
      </v-col>
    </v-row>

    <v-row>
      <v-col>
        Text Preview with url
      </v-col>
    </v-row>

    <v-row>
      <v-col>
        <TextPreviewCard :url="txtUrl" />
      </v-col>
    </v-row>

    <v-row>
      <v-col>
        Text Preview with invalid url
      </v-col>
    </v-row>

    <v-row>
      <v-col>
        <TextPreviewCard :url="invalidUrl" />
      </v-col>
    </v-row>

    <v-row>
      <v-col>
      Text Preview with relative url to readme1
      </v-col>
    </v-row>

    <v-row>
      <v-col>
        <TextPreviewCard :content="readme1"  />
      </v-col>
    </v-row>

    <v-row>
      <v-col>
      Text Preview with relative url to readme2
      </v-col>
    </v-row>

    <v-row>
      <v-col>
        <TextPreviewCard :content="readme2"  />
      </v-col>
    </v-row>   
    
    <v-row>
      <v-col>
      Text Preview with markdown url
      </v-col>
    </v-row>

    <v-row>
      <v-col>
        <TextPreviewCard :url="mdUrl"
                          :enableMarkdown="true" />
      </v-col>
    </v-row>


    <v-row>
      <v-col>
      Text Preview with relative url to a lare txt file
      </v-col>
    </v-row>

    <v-row>
      <v-col>
        <TextPreviewCard :url="relavtieUrl"  />
      </v-col>
    </v-row>
 
  </v-col> `,
  data: () => ({
    txtUrl: 'https://os.zhdk.cloud.switch.ch/envicloud/wsl/ros_data/readme.txt',
    invalidUrl: 'https://os.zhdk.cloud.switch.ch/envicloud/wsl/ros_data/fasdfasdfasdfas.txt',
    mdUrl: 'https://raw.githubusercontent.com/EnviDat/EnviDat-Frontend/master/README.md',
    relavtieUrl: './testdata/largeText.txt',
    readme1,
    readme2,
  }),
}));


const readme1 = `This folder contains, Ini files, data and programs to create a full year precipitation data set for Imis Stations and data and files to model GT with snowpack.


ANETZ stand for precipitation data generated by regression from the nearest ANETZ stations
IMIS stands for Prec. measurements taken directly at the IMIS stations
SNOWP. generated prec. data from snow hight measurements by SNOWPACK


GenPSUm contains Files to get the complete precipitation set:

1. MeteoData.ini: Ini file for MeteoIO to get the met. input data. It has to be run two times, to get prec. Data from Imis 	stations and from ANETZ regressions.

2 GenPSUM.ini: Inifile for Snowpack (in research mode), to get winter precipitation calculated by snowpack out of the snow hight measurements.
	In:_sno contain the soil profils for the station
	In_met contains the meterological input data. It's from the data base and MeteoData.ini is used to get it.

3. The folder R_programms contains the R sripts to generate the precipitation data set, it reads in IMIS, ANETZ and SNOWPACK precipi and makes one complet data set out of it.  (it contains the function- script plus a script to use the function)


The fodler GTModeling_Snowpack contains ini-files for snowpack, soil profils, and input data for the climate change modeling.

example.ini is the inifile for snowpack which was used for the Reference period and the Cliamte change signal for all Stations.

The folder In_met contains the different meterological input files. For ech of the 3 future Periode (2035- 2060, 2060- 2085, 2085-2100) for each station 10 different delta change signals are avaible. Each data change is added to the smet file for the reference period and stored in a different foler which is named after the Regional cliamte Model.

The folder In_sno contains the Soil profils for each station.

The Folder R- Script contains, the R files to create the Climate Change input and the Data for the WFJ- Modeling.

The folder PRecipitation Data sets contains 16 ideal precipiation Data sets for IMIS stations.
`;

const readme2 = `This dataset contains the data acquired during the expedition to Princess Elisabeth Antarctica Station in December 2016 and January 2017.

The data is organized in four folders. Each folder is a .zip file. 


meteo.zip
*********
This folder contains the data from the two meteorological stations. Each subfolder station1 and station2 contains the same three files, where X is either 1 or 2:

csat_data_stationX.txt contains the CSAT3 ultrasonic anemometer data acquired at 10Hz. The file contains the following columns:
timestamp: The format is yyyymmdd_HHMMSS.SSS
ux: Wind speed in the x direction in m/s
uy: Wind speed in the y direction in m/s
uz: Wind speed in the z direction in m/s

young_data_stationX.txt contains the Young wind monitor data (two per station) with a temporal resolution of 1 min. The file contains the following columns:
timestamp: The format is yyyymmdd_HHMMSS.SSS
ws1_avg: Average wind speed of Young1 in m/s
ws1_max: Maximum wind speed of Young1 in m/s
ws1_std: Standard deviation of the wind speed of Young1 in m/s
wd1: Wind direction of Young1 in degrees
ws2_avg: Average wind speed of Young2 in m/s
ws2_max: Maximum wind speed of Young2 in m/s
ws2_std: Standard deviation of the wind speed of Young2 in m/s
wd2: Wind direction of Young2 in degrees

meteo_data_stationX.txt contains the data from the other sensors with a temporal resolution of 10 min. The file contains the following columns:
timestamp: The format is yyyymmdd_HHMMSS.SSS
ta: Air temperature in degrees Celsius
rh: Relative air humidity in %
hs: Distnace from snow surface to snow height sensor in m
tss: Snow surface temperature in Kelvin


smp.zip
*******
This folder contains the SnowMicroPen (SMP) measurements as .dat files

Each file is named as [SMPnum]_[date]_[time]_[info].dat where:
[SMPnum] is the consecutive identifier number of the SMP
[date] is given as yyyymmdd
[time] is given as HHMMSS
[info] is a string describing where the SMP was acquired

Each .dat file contains the following columns:
Depth [mm]: Penetration depth in mm
Force [N]: Resisting force in N


spc.zip
*******
This folder contains the data of the Snow Particle Counters installed at each of the two meteorological stations. The .txt file for each station contains the following columns:
timestamp: The format is yyyymmdd_HHMMSS.SSS
massflux: drifting snow massflux in kg m^(-2) s^(-1)
Nparticles_xxx: Number of particles of size xxx microns.

There are 64 such columns containing the particle size distribution at each timestep


tls.zip
*******
This folder contains the data acquired with the Terrestrial Laser Scanner. The subfolder pointclouds_glcs contains the scans as pointclouds in .txt files in the Global Coordinate System, which is UTM zone 34 south with the origin at one of the meteo stations.

Each file is named as [date]_[time]_oct_5.txt
[date] is given as yyyymmdd
[time] is given as HHMMSS
The suffix oct_5 means that a 5 cm octree filter was applied to the raw scans before exporting them.

Each file contains the following columns:
X[m]: X-coordinate of the point in m
Y[m]: Y-coordinate of the point in m
Z[m]: Z-coordinate of the point in m

The file smpPositions_glcs.txt contains the positions of the SMP measurements in the Global Coordinate System. The file contains the following columns:
SMPnum: SMP identifier number (see above)
X[m]: X-coordinate of the SMP in m
Y[m]: Y-coordinate of the SMP in m
Z[m]: Z-coordinate of the SMP in m (is always 0)`;
